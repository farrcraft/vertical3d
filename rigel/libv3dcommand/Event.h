/*
	Copyright (C) 2001-2004 by Josh Farr
	merkaba_at_quantumfish_dot_com

	This file is part of Vertical|3D.

	Vertical|3D is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation; either version 2 of the License, or
	(at your option) any later version.

	Vertical|3D is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with Vertical|3D; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/
#ifndef INCLUDED_V3D_EVENT_H
#define INCLUDED_V3D_EVENT_H

#include <string>

namespace v3D
{

	/*
		there are events generated by key presses and releases
		e.g. CommandDirectory::dispatch(event_t)
		with event_t storing the event name and possibly type
		e.g. {"Keyboard::Q", MATCH_STATE_ON}
		binds loaded at init contain this information plus a command name

		storing the event information with the command it is bound to
		requires checking every command for a matching bind.
		the command table should store a mapping of events to command name
		binds for quick lookup.
	*/

	class Event
	{
		public:
			typedef enum MatchState
			{
				MATCH_STATE_ON,
				MATCH_STATE_OFF,
				MATCH_STATE_ANY
			} MatchState;

			Event();
			Event(const std::string & name, std::string ns = "", MatchState flag = MATCH_STATE_ANY);
			~Event();

			std::string name(void) const;
			std::string ns(void) const;
			MatchState	flag(void) const;

			void name(const std::string & n);
			void ns(const std::string & n);
			void flag(MatchState f);

		private:
			std::string		_namespace;
			std::string		_name;
			MatchState		_catchflag;
	};

}; // end namespace v3D

#endif // INCLUDED_V3D_EVENT_H
