DONE:
* integrate libv3dtypes
* integrate libv3dcore
* integrate libv3dgraph
* create poly cube
* draw grids
* dynamic/recursive menu building code
* dispatch existing commands
* remove old popup menu code
* finish filling out menu entry array
* view menu options (shaded, grids ...)
* dispatch new view->show commands
* dispatch new view->render mode commands
* dispatch new view->cull mode commands
* dispatch new view->shading mode commands
* render menu entries (COMMANDS.txt)
* timeline menu entries
* view -> camera -> persp, ortho front, back, top, etc menu entries
* radio group menu entries
* checkbox menu entries
* popup menu entries for object manipulation tools
* view label
* save/load file dialogs
* right panel area
* unique color on each side of poly box (to test view cameras)
* integrate libmoya
* change view cameras (ViewPort::activeCamera)
* add camera viewing matrix
* add matrix translate
* get grid back
* draw view axis decoration (already in draw() but doesn't work? e.g. like grid?)
* zoom ortho camera views
* pedestal/truck ortho camera views
* align view label at bottom center
* align axis indicator at bottom left
* add axis labels to axis indicator
* fix ortho construction plane (grid) to be perpendicular to camera direction
* make axis decoration visible in all predefined ortho views
* orient axis decoration properly in all predefined ortho views
* orient axis decoration labels properly in all views
* quaternion/matrix rotations
* use rotations on viewing matrix to orient view cameras instead of using up/right/direction
* dolly camera
* change view camera to perspective camera
* pan/tilt camera
* add matrix scale
* view manipulation tools
	* truck (move left/right)
	* dolly (move forward/backward)
	* zoom (dolly for ortho)
	* pedestal (move up/down)
	* pan (look left/right)
	* tilt (look up/down)
* port to gtkmm
* viewport event methods as non-static member methods
* transform dag node
* translate poly object
* fix popup menu
* clean up & remove dead gui code
* multiple viewports
* get rid of g_print() event calls and cleanup code
* dispatch camera manipulator commands
* transform tools require transform dag node
* active view indicator/decoration
* enumerate views
* change active view
* invalidate all views on active view change
* fix invalidate view after e.g. camera manipulator commands
* push/pop matrix when drawing each mesh
* select poly object
* object manipulation tools (select, trs)
	* select
	* translate
	* rotate
	* scale
* scale poly object
* rotate poly object
* create poly cylinder
* create poly cone
* create poly plane
* render view window
* render command
* use radius when creating poly cone and cylinder
* fix width/height scaling issues on view resizes
* grid origin should be in the center of the viewport (ortho projection bug)
* fix perspective projection
* rewrite menu builder to use xml data
* rewrite viewlayout gui builder to use xml data
* add docs/COPY_HEAD.txt contents to all source files
* build libv3dcommand
* convert create_poly_* methods to Command objects
* replace menus.cxx code with CommandDirectory command dispatching
* remove menus.cxx from project
* fix view axis decorations
* don't allow viewport and object transforms at the same time (e.g. translate + zoom)
* load camera profiles from gui.xml
* set viewport camera based on gui.xml value
* use canonical volume in camera projection
* use default camera zoom from camera profile
* fix view axis decorations again
* translate in same direction as mouse movement
* translate at same rate as mouse movement
* account for zoom factor in camera truck & pedestal
* fix perspective camera construction plane
* redraw all views after changing tool mode
* redraw all views after translation
* redraw views more often (when events occur that require it)
* force expose on key press events
* fix default perspective camera positioning & orientation
* fix camera::lookat / spherical billboarding
* fix camera transforms for perspective views
* pop active view in/out
* adaptive projection
* fix translate mouse direction (needs reversed)
* adaptive position
* grid furthest from camera as possible
* make scale handle boxes smaller
* draw selection in different color than unselected nodes
* fix object selection
* do hit test on mouse release
* make sure libmoya/renderman.h has correct copyright info
* integrate libv3dcommand
* find a way to get rid of global_window
* get rid of static and public member data in window
+ debug log
+ app init logging messages
+ add transform command set
+ select mask commands
+ key bindings in gui.xml
+ dispatch commands from key bindings
+ finish key commands (view popping, shading mode)
+ make sure keybinding works
+ use fixed size for manipulator handles (don't scale)
+ draw mesh edges of selected object when render mode is filled
+ never occlude/clip manipulator handles with meshes (disable depth testing)
+ translate handles
+ scale handles
+ rotate handles
+ object rotation handle/manipulator
+ object translation handle/manipulator
+ gui xml data files (*view layout, *menus, ...)
+ face selection handle
+ vertex selection handle
+ arcball rotation for perspective view
+ axis constraints should be global instead of per viewport
+ fix scale manipulator constraints to match translate manipulator
+ fix rotate manipulator constraints to match translate manipulator
+ ebuild
+ split manipulators from viewport into own files
+ move manipulator code from viewport motion notify into manipulator methods
+ draw wireframe polys using line strips 
	+ fix hit selection through objects
+ fix line strip drawing
+ viewport zoom shouldn't change manipulator size
+ better face selection handles for triangular faces (e.g. cone)
+ fix unconstrained transform factor regression
+ maintain sub-object selection data 
	+ face
	+ vertex 
	+ edge
+ select poly face
+ select poly vertex
+ select poly edge
+ selection modes (sub object, vertices, edges, faces, ...)
+ sub object selection modes
	+ face
	+ edge
	+ vertex
+ manipulators should be centered at vertex/face/edge handle position in subobject modes
+ center manipulators at center of selection in subobject modes (e.g. between two selected vertices)
+ unselect components when object is unselected
+ translate face selection
+ translate vertex selection
+ translate edge selection
+ don't do hit test during mouse drag
+ fix perspective view positioning
+ fix perspective camera manipulation
+ show open/save/cancel buttons in open/save project filechooser dialogs
+ save native project format
+ load native project format


TODO:
- make moya usable
	+ coordinate system transforms
	+ diceable test
	+ split polygons
	- dice polygons
	- shade micropolygon grids
	- sample micropolygons
	- display framebuffer contents
	- position/orient camera

* instantiate poly tools
+ poly tools ui
+ test inverse matrix results
- tool interface
- poly tools
	- extrude poly face tool
	- split poly face tool
	- split poly edge tool
- refactor - add ViewPort::drawVertexHandle(point, color, filled)
- select multiple faces
- select multiple vertices
- select multiple edges
- select multiple objects
- rubberband selection (http://www.opengl.org/resources/faq/technical/rasterization.htm#rast0110)
- fix TRS manipulator factor in non-ortho view
- click drag translate axis handles to constrain axis
- click drag scale handles to constrain axis
- click drag rotate handles to constrain axis
- draw center square free axis handle on translate manipulator
- menubar
* get rid of public member data in viewport
* privatize viewport class properties
- select masks for all, none
- select by object type / select by component type
- make toggle tool buttons reflect correct status
- add top tool toggle buttons for select masks
- import object data (3ds, lwo, dxf, ...)
	- 3ds
	- lwo
	- dxf
	- milkshape m3d
- select mask toolbar buttons
	- any
	- points (vertices)
	- edges
	- faces
	- meshes
	- objects
- default object names
- attribute editor
- renaming objects
- poly object attributes
	- cube
	- plane
	- cone
	- cylinder
- use fixed arcball position in perspective view (center of view or world origin)
- fix view set_size_request in viewlayout when creating views
- axis decorator closest to camera as possible
- draw translate handles in global or object space
- create orthographic camera
- create perspective camera
- create grid object
- ui elements like bluefish? 
	- side notebook tabs in prefs dialog
	- toolbar with notebook tabs
	- secondary menu for views
	* main toolbar
	* left side toolbar
	- tear off menus
	- status bar
+ visible set flags
	* meshes
	- cameras
	- lights
	- handles
	* grids
+ view shading flags
	* wireframe
	- backlit
	* flat shaded
	* smooth shaded
	- hardware shaded
	- hardware lights
* default lighting
- custom taskbar window icon
- set radio and checkbox menu entries to correct defaults
- menu entry icons
- menu entry accelerators
- keyable attribute channels
- graph view window
- plugin support
- grid snapping
- keyable attributes
- set key command (s/S key)
- scene timeline
- start timeline playback command
- stop timeline playback command
- first timeline frame command
- last timeline frame command
- previous keyed timeline frame command
- next keyed timeline frame command
- next timeline frame command
- previous timeline frame command
- nurbs surfaces
	- plane
	- cube
	- sphere
+ doxygen api docs
	+ libv3dtypes
	- libv3dgraph
	+ libv3dcommand
	+ libv3dcore
	+ libmoya
- edit layers
- layer display modes (template, hidden, ...)
- render settings dialog
- batch render command
- create flipbook command
- load/save raster image formats
	- jpeg
	- png
	- tiff
	- targa
	- bmp
- particle systems
- deformers
- groups
- curves
	- edit point (EP) curve
	- control vertex (CV) curve
- curved surfaces
- revolve
- extrude
- lathe
- birail
- sweep
